{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vishnu\\\\ReactApps\\\\burger-app-without-hook\\\\src\\\\containers\\\\BurgerBuilder\\\\BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Auxillary from '../../hoc/Auxillary';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nconst INGERDIENT_PRICES = {\n  salad: 0.4,\n  bacon: 0.6,\n  cheese: 0.5,\n  meat: 1.2\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredient: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 4,\n      purchasable: false,\n      purchasing: false\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredient[type];\n      const updatedCount = oldCount + 1;\n      const updatedIngredients = { ...this.state.ingredient\n      };\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = INGERDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredient: updatedIngredients\n      });\n      this.updatePurchasable(updatedIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredient[type];\n      if (oldCount < 1) return;\n      const updatedCount = oldCount - 1;\n      const updatedIngredients = { ...this.state.ingredient\n      };\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = INGERDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredient: updatedIngredients\n      });\n      this.updatePurchasable(updatedIngredients);\n    };\n  }\n\n  purchaseHandler() {\n    this.setState({\n      purchasing: true\n    });\n  }\n\n  updatePurchasable(updatedIngredients) {\n    const sum = Object.keys(updatedIngredients).map(igKey => {\n      return updatedIngredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    this.setState({\n      purchasable: sum > 0\n    });\n  }\n\n  render() {\n    const disabledInfo = { ...this.state.ingredient\n    };\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    return /*#__PURE__*/React.createElement(Auxillary, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.purchasing,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(OrderSummary, {\n      ingredient: this.state.ingredient,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Burger, {\n      ingredients: this.state.ingredient,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 16\n      }\n    }), /*#__PURE__*/React.createElement(BuildControls, {\n      ingredientAdded: this.addIngredientHandler,\n      ingredientRemoved: this.removeIngredientHandler,\n      disabled: disabledInfo,\n      purchasable: this.state.purchasable,\n      ordered: this.purchaseHandler,\n      price: this.state.totalPrice,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["C:/Users/vishnu/ReactApps/burger-app-without-hook/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Auxillary","Burger","BuildControls","Modal","OrderSummary","INGERDIENT_PRICES","salad","bacon","cheese","meat","BurgerBuilder","state","ingredient","totalPrice","purchasable","purchasing","addIngredientHandler","type","oldCount","updatedCount","updatedIngredients","priceAddition","oldPrice","newPrice","setState","updatePurchasable","removeIngredientHandler","purchaseHandler","sum","Object","keys","map","igKey","reduce","el","render","disabledInfo","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Auxillary from '../../hoc/Auxillary'\r\nimport Burger from '../../components/Burger/Burger'\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls'\r\nimport Modal from '../../components/UI/Modal/Modal'\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary'\r\n\r\nconst INGERDIENT_PRICES ={\r\n    salad: 0.4,\r\n    bacon:0.6,\r\n    cheese:0.5,\r\n    meat : 1.2\r\n    \r\n}\r\nclass BurgerBuilder extends Component{\r\n\r\n    state = {\r\n        ingredient : {\r\n            salad:0,\r\n            bacon:0,\r\n            cheese:0,\r\n            meat:0\r\n        },\r\n        totalPrice:4,\r\n        purchasable:false,\r\n        purchasing:false\r\n\r\n    } \r\n    purchaseHandler(){\r\n        this.setState({purchasing:true});\r\n    }\r\n\r\n    updatePurchasable(updatedIngredients){\r\n     \r\n        const sum=Object.keys(updatedIngredients)\r\n        .map(igKey=>{\r\n            return  updatedIngredients[igKey];\r\n        }).reduce((sum,el)=>{\r\n            return sum+el;\r\n        },0)\r\n\r\n        this.setState ({purchasable :sum>0})\r\n    }\r\n    \r\n    addIngredientHandler = ( type ) => {\r\n        const oldCount = this.state.ingredient[type];\r\n        const updatedCount = oldCount + 1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredient\r\n        };\r\n        updatedIngredients[type] = updatedCount;\r\n        const priceAddition = INGERDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice + priceAddition;\r\n        this.setState( { totalPrice: newPrice, ingredient: updatedIngredients } );\r\n        this.updatePurchasable(updatedIngredients);\r\n    }\r\n\r\n    removeIngredientHandler = ( type ) => {\r\n        const oldCount = this.state.ingredient[type];\r\n        if(oldCount<1) return;\r\n        const updatedCount = oldCount -1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredient\r\n        };\r\n        updatedIngredients[type] = updatedCount;\r\n        const priceAddition = INGERDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice - priceAddition;\r\n        this.setState( { totalPrice: newPrice, ingredient: updatedIngredients } );\r\n        this.updatePurchasable(updatedIngredients);\r\n\r\n    }\r\n\r\n    \r\n\r\n    render(){\r\n        const disabledInfo ={\r\n            ...this.state.ingredient\r\n        }\r\n        for(let key in disabledInfo ){\r\n            disabledInfo[key]=disabledInfo[key]<=0\r\n        }\r\n        return(\r\n            <Auxillary>\r\n                <Modal show={this.state.purchasing}>\r\n                    <OrderSummary  ingredient={this.state.ingredient}/>\r\n                </Modal>\r\n               <Burger ingredients={this.state.ingredient} />\r\n                <BuildControls \r\n                ingredientAdded={this.addIngredientHandler}\r\n                ingredientRemoved={this.removeIngredientHandler}\r\n                disabled={disabledInfo} \r\n                purchasable={this.state.purchasable}\r\n                ordered={this.purchaseHandler}\r\n                price={this.state.totalPrice}/>\r\n            </Auxillary>\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default BurgerBuilder;"]},"metadata":{},"sourceType":"module"}