{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vishnu\\\\ReactApps\\\\burger-app-without-hook\\\\src\\\\components\\\\Burger\\\\Burger.js\";\nimport React from 'react';\nimport styles from './Burger.module.css';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\n\nconst burger = props => {\n  console.log(\"props\" + props.ingredient['salad']);\n  console.log(\"props  a\" + props.sa);\n  let transformedIngred = Object.keys(props.ingredient).map(igkey => {\n    //   console.log(\"igkey 1\"+ igkey);\n    return [...Array(props.ingredient[igkey])].map((_, index) => {\n      // console.log(\"igkey 2\"+ igkey);\n      return /*#__PURE__*/React.createElement(BurgerIngredient, {\n        key: igkey + index,\n        type: igkey,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 20\n        }\n      });\n    });\n  }).reduce((arr, el) => {\n    return arr.concat(el);\n  }, []);\n\n  if (transformedIngred.length === 0) {\n    transformedIngred = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 27\n      }\n    }, \"Please start add ingredients\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Burger,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BurgerIngredient, {\n    type: \"bread-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }), transformedIngred, /*#__PURE__*/React.createElement(BurgerIngredient, {\n    type: \"bread-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default burger;","map":{"version":3,"sources":["C:/Users/vishnu/ReactApps/burger-app-without-hook/src/components/Burger/Burger.js"],"names":["React","styles","BurgerIngredient","burger","props","console","log","ingredient","sa","transformedIngred","Object","keys","map","igkey","Array","_","index","reduce","arr","el","concat","length","Burger"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,gBAAP,MAA6B,qCAA7B;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACtBC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAQF,KAAK,CAACG,UAAN,CAAiB,OAAjB,CAApB;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAWF,KAAK,CAACI,EAA7B;AACA,MAAIC,iBAAiB,GAAGC,MAAM,CAACC,IAAP,CAAYP,KAAK,CAACG,UAAlB,EAA8BK,GAA9B,CAAkCC,KAAK,IAAI;AAC1D;AACL,WAAO,CAAC,GAAGC,KAAK,CAACV,KAAK,CAACG,UAAN,CAAiBM,KAAjB,CAAD,CAAT,EAAoCD,GAApC,CAAwC,CAACG,CAAD,EAAIC,KAAJ,KAAc;AAC1D;AACC,0BAAO,oBAAC,gBAAD;AAAkB,QAAA,GAAG,EAAEH,KAAK,GAAGG,KAA/B;AAAsC,QAAA,IAAI,EAAEH,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAHM,CAAP;AAIH,GANuB,EAMrBI,MANqB,CAMd,CAACC,GAAD,EAAKC,EAAL,KAAU;AAChB,WAAOD,GAAG,CAACE,MAAJ,CAAWD,EAAX,CAAP;AACH,GARuB,EAQtB,EARsB,CAAxB;;AASA,MAAGV,iBAAiB,CAACY,MAAlB,KAA2B,CAA9B,EAAgC;AAC5BZ,IAAAA,iBAAiB,gBAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAlB;AACH;;AACD,sBACI;AAAK,IAAA,SAAS,EAAER,MAAM,CAACqB,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAC,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEKb,iBAFL,eAGI,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAC,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ;AAQH,CAvBD;;AAyBA,eAAeN,MAAf","sourcesContent":["import React from 'react'\r\nimport styles from './Burger.module.css'\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient'\r\n\r\nconst burger = (props) => {\r\n    console.log(\"props\"+props.ingredient['salad'])\r\n    console.log(\"props  a\"+props.sa)\r\n    let transformedIngred = Object.keys(props.ingredient).map(igkey => {\r\n             //   console.log(\"igkey 1\"+ igkey);\r\n        return [...Array(props.ingredient[igkey])].map((_, index) => {\r\n           // console.log(\"igkey 2\"+ igkey);\r\n            return <BurgerIngredient key={igkey + index} type={igkey} />\r\n        });\r\n    }).reduce((arr,el)=>{\r\n        return arr.concat(el);\r\n    },[]);\r\n    if(transformedIngred.length===0){\r\n        transformedIngred=<p>Please start add ingredients</p>\r\n    }\r\n    return (\r\n        <div className={styles.Burger}>\r\n            <BurgerIngredient type=\"bread-top\"/>\r\n            {transformedIngred}\r\n            <BurgerIngredient type=\"bread-bottom\"/>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default burger;"]},"metadata":{},"sourceType":"module"}